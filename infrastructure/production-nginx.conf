events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Inline essential MIME types (avoid external file dependency)
    types {
        text/html                             html htm shtml;
        text/css                              css;
        application/javascript                js;
        application/json                      json;
        image/png                             png;
        image/jpeg                            jpeg jpg;
        image/gif                             gif;
        image/svg+xml                         svg svgz;
        text/plain                            txt;
        application/font-woff                 woff;
        application/font-woff2                woff2;
    }
    default_type application/octet-stream;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Security and compression
    gzip on;
    gzip_vary on;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    
    # Upstream definitions
    upstream ical-viewer-frontend {
        server ical-viewer-frontend:80;
        keepalive 2;
    }
    
    upstream ical-viewer-backend {
        server ical-viewer:3000;
        keepalive 2;
    }
    
    # Future upstream
    # upstream gabs-massage {
    #     server gabs-massage:4000;
    #     keepalive 2;
    # }
    
    # SSL configuration (common settings)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security headers (applied to all domains)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:;" always;
    
    # ============================================================================
    # DOMAIN: filter-ical.de (iCal Viewer)
    # ============================================================================
    
    # HTTP redirect to HTTPS
    server {
        listen 80;
        server_name filter-ical.de www.filter-ical.de;
        
        # Let's Encrypt challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            try_files $uri =404;
        }
        
        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }
    
    # HTTPS server
    server {
        listen 443 ssl;
        http2 on;
        server_name filter-ical.de www.filter-ical.de;
        
        # SSL certificates
        ssl_certificate /etc/letsencrypt/live/filter-ical.de/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/filter-ical.de/privkey.pem;
        
        # API endpoints - route to backend
        location ~ ^/(api|filter|subscribe)/ {
            proxy_pass http://ical-viewer-backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Rate limiting
            limit_req zone=api burst=20 nodelay;
        }
        
        # Health check - route to backend (no rate limiting)
        location /health {
            proxy_pass http://ical-viewer-backend;
            access_log off;
        }
        
        # Vue 3 SPA - route to frontend container  
        location / {
            proxy_pass http://ical-viewer-frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # SPA fallback for client-side routing
            proxy_intercept_errors on;
            error_page 404 = @fallback;
        }
        
        # SPA fallback
        location @fallback {
            proxy_pass http://ical-viewer-frontend;
        }
        
        # Static assets caching - route to frontend
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://ical-viewer-frontend;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Served-By "nginx";
        }
    }
    
    # ============================================================================
    # FUTURE DOMAIN: gabs-massage.de (Massage Website)
    # ============================================================================
    
    # Uncomment when ready to deploy gabs-massage.de
    # server {
    #     listen 80;
    #     server_name gabs-massage.de www.gabs-massage.de;
    #     
    #     location /.well-known/acme-challenge/ {
    #         root /var/www/certbot;
    #         try_files $uri =404;
    #     }
    #     
    #     location / {
    #         return 301 https://$server_name$request_uri;
    #     }
    # }
    # 
    # server {
    #     listen 443 ssl http2;
    #     server_name gabs-massage.de www.gabs-massage.de;
    #     
    #     ssl_certificate /etc/letsencrypt/live/gabs-massage.de/fullchain.pem;
    #     ssl_certificate_key /etc/letsencrypt/live/gabs-massage.de/privkey.pem;
    #     
    #     location / {
    #         proxy_pass http://gabs-massage;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection "upgrade";
    #         
    #         proxy_connect_timeout 60s;
    #         proxy_send_timeout 60s;
    #         proxy_read_timeout 60s;
    #         
    #         limit_req zone=api burst=20 nodelay;
    #     }
    #     
    #     location /health {
    #         proxy_pass http://gabs-massage;
    #         access_log off;
    #     }
    # }
    
    # ============================================================================
    # DEFAULT SERVER - Reject unknown domains
    # ============================================================================
    server {
        listen 80 default_server;
        listen 443 ssl default_server;
        server_name _;
        
        # Dummy SSL certificate for default server
        ssl_certificate /etc/letsencrypt/live/filter-ical.de/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/filter-ical.de/privkey.pem;
        
        # Return 444 (close connection) for unknown domains
        return 444;
    }
    
    # ============================================================================
    # HEALTH CHECK SERVER (Internal)
    # ============================================================================
    server {
        listen 8080;
        server_name localhost;
        
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}