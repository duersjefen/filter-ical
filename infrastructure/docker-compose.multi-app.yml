version: '3.8'

services:
  # Nginx reverse proxy - handles all incoming traffic
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx-logs:/var/log/nginx
      - static-files:/var/www/static:ro
      # Future: SSL certificates
      # - ./ssl:/etc/ssl/certs:ro
    depends_on:
      - ical-viewer-backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - web-network

  # iCal Viewer Backend
  ical-viewer-backend:
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/ical-viewer-backend:latest
    expose:
      - "3000"
    environment:
      - ENV=production
      - PORT=3000
      - BASE_PATH=/ical  # Tell app it's running under /ical path
    volumes:
      - ical-data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - web-network

  # Future: Add more services here
  # app2-backend:
  #   image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/app2-backend:latest
  #   expose:
  #     - "4000"
  #   environment:
  #     - ENV=production
  #     - PORT=4000
  #     - BASE_PATH=/app2
  #   volumes:
  #     - app2-data:/app/data
  #   restart: unless-stopped
  #   networks:
  #     - web-network

networks:
  web-network:
    driver: bridge

volumes:
  ical-data:
    driver: local
  nginx-logs:
    driver: local
  static-files:
    driver: local
  # Future app volumes
  # app2-data:
  #   driver: local