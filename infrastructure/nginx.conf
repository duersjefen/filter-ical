events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    
    # Upstream backend services
    upstream ical-viewer {
        server ical-viewer-backend:3000;
    }
    
    # Default server - handles multiple apps
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        
        # Main landing page (future: portfolio/index)
        location = / {
            return 301 /ical/;
        }
        
        # iCal Viewer application
        location /ical/ {
            # Remove /ical prefix when forwarding to backend
            rewrite ^/ical/(.*)$ /$1 break;
            
            proxy_pass http://ical-viewer;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Handle WebSocket upgrades (if needed)
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Rate limiting
            limit_req zone=api burst=20 nodelay;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Future: Add more applications here
        # location /app2/ {
        #     proxy_pass http://app2-backend:4000;
        #     # ... similar proxy settings
        # }
        
        # Static files (if needed)
        location /static/ {
            root /var/www;
            expires 30d;
            add_header Cache-Control "public, immutable";
        }
        
        # 404 fallback
        location / {
            return 404 "App not found. Available: /ical/";
            add_header Content-Type text/plain;
        }
    }
    
    # Future: Domain-based routing
    # server {
    #     listen 80;
    #     server_name filter-my-calendar.com www.filter-my-calendar.com;
    #     
    #     # Redirect to HTTPS
    #     return 301 https://$server_name$request_uri;
    # }
    
    # server {
    #     listen 443 ssl http2;
    #     server_name filter-my-calendar.com www.filter-my-calendar.com;
    #     
    #     # SSL configuration
    #     ssl_certificate /etc/ssl/certs/filter-my-calendar.com.crt;
    #     ssl_certificate_key /etc/ssl/private/filter-my-calendar.com.key;
    #     
    #     # Forward to ical-viewer directly
    #     location / {
    #         proxy_pass http://ical-viewer;
    #         # ... proxy settings
    #     }
    # }
}