openapi: 3.0.3
info:
  title: iCal Viewer API
  description: |
    **Perfect OpenAPI specification based on actual frontend requirements.**
    
    This specification was created by analyzing the clean frontend codebase after 
    architectural rollback to remove community features. It defines the minimal, 
    exact API surface needed for the core iCal viewer functionality.
    
    ## Key Features:
    - **Contract-driven**: Implementation must match this spec exactly
    - **Frontend-driven**: Every endpoint and field is used by the frontend  
    - **Minimal surface**: No unused endpoints or fields
    - **Consistent errors**: Standardized error response format
    - **Simple auth**: Header-based user identification
    
    ## Authentication:
    All authenticated endpoints require `x-user-id` header with user identifier.
    
  version: "2.0.0"
  contact:
    name: iCal Viewer API
    url: https://filter-ical.de
servers:
  - url: http://localhost:3000
    description: Development server
  - url: https://filter-ical.de
    description: Production server

paths:
  # ===============================================
  # Calendar Management APIs
  # ===============================================
  
  /api/calendars:
    get:
      summary: Get user's calendars
      description: Fetch all calendars owned by the authenticated user
      tags:
        - Calendars
      security:
        - UserAuth: []
      responses:
        '200':
          description: Successfully retrieved calendars
          content:
            application/json:
              schema:
                type: object
                required:
                  - calendars
                properties:
                  calendars:
                    type: array
                    items:
                      $ref: '#/components/schemas/Calendar'
              example:
                calendars:
                  - id: "cal_001"
                    name: "Work Calendar"
                    url: "https://example.com/work.ics"
                    user_id: "user123"
                    created_at: "2024-01-15T10:30:00Z"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'
    
    post:
      summary: Create new calendar
      description: Add a new calendar for the authenticated user
      tags:
        - Calendars
      security:
        - UserAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - url
              properties:
                name:
                  type: string
                  minLength: 3
                  maxLength: 100
                  description: Calendar display name
                  example: "Team Events"
                url:
                  type: string
                  format: uri
                  description: iCal URL to import from
                  example: "https://example.com/team.ics"
            example:
              name: "Team Events"
              url: "https://example.com/team.ics"
      responses:
        '201':
          description: Calendar created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar'
              example:
                id: "cal_003"
                name: "Team Events"
                url: "https://example.com/team.ics"
                user_id: "user123"
                created_at: "2024-01-17T09:15:00Z"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/calendars/{calendar_id}:
    delete:
      summary: Delete calendar
      description: Remove a calendar and all associated data
      tags:
        - Calendars
      security:
        - UserAuth: []
      parameters:
        - name: calendar_id
          in: path
          required: true
          schema:
            type: string
          description: Unique calendar identifier
          example: "cal_001"
      responses:
        '204':
          description: Calendar deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  # ===============================================
  # Calendar Data APIs
  # ===============================================

  /api/calendar/{calendar_id}/events:
    get:
      summary: Get calendar events
      description: Retrieve all events from a specific calendar
      tags:
        - Calendar Data
      security:
        - UserAuth: []
      parameters:
        - name: calendar_id
          in: path
          required: true
          schema:
            type: string
          description: Unique calendar identifier
          example: "cal_001"
      responses:
        '200':
          description: Successfully retrieved events
          content:
            application/json:
              schema:
                type: object
                required:
                  - events
                properties:
                  events:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
              example:
                events:
                  - id: "evt_001"
                    title: "Team Meeting"
                    start: "2024-01-18T10:00:00Z"
                    end: "2024-01-18T11:00:00Z"
                    category: "Work"
                    description: "Weekly team sync"
                    location: "Conference Room A"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/calendar/{calendar_id}/categories:
    get:
      summary: Get calendar categories
      description: Retrieve event categories with counts for a specific calendar
      tags:
        - Calendar Data
      security:
        - UserAuth: []
      parameters:
        - name: calendar_id
          in: path
          required: true
          schema:
            type: string
          description: Unique calendar identifier
          example: "cal_001"
      responses:
        '200':
          description: Successfully retrieved categories
          content:
            application/json:
              schema:
                type: object
                required:
                  - categories
                properties:
                  categories:
                    type: object
                    additionalProperties:
                      type: object
                      required:
                        - count
                        - events
                      properties:
                        count:
                          type: integer
                          minimum: 0
                          description: Number of events in this category
                        events:
                          type: array
                          items:
                            type: string
                          description: Array of event IDs in this category
              example:
                categories:
                  "Work":
                    count: 5
                    events: ["evt_001", "evt_003", "evt_005", "evt_007", "evt_009"]
                  "Personal":
                    count: 3
                    events: ["evt_002", "evt_004", "evt_006"]
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  # ===============================================
  # Filtered Calendar APIs
  # ===============================================

  /api/filtered-calendars:
    get:
      summary: Get filtered calendars
      description: Retrieve all filtered calendars created by the authenticated user
      tags:
        - Filtered Calendars
      security:
        - UserAuth: []
      responses:
        '200':
          description: Successfully retrieved filtered calendars
          content:
            application/json:
              schema:
                type: object
                required:
                  - filtered_calendars
                properties:
                  filtered_calendars:
                    type: array
                    items:
                      $ref: '#/components/schemas/FilteredCalendar'
              example:
                filtered_calendars:
                  - id: "fc_001"
                    name: "Work Events Only"
                    public_token: "abc123def456"
                    calendar_url: "https://filter-ical.de/cal/abc123def456"
                    preview_url: "https://filter-ical.de/preview/abc123def456"
                    source_calendar_id: "cal_001"
                    filter_config:
                      include_categories: ["Work", "Meeting"]
                      exclude_categories: []
                      filter_mode: "include"
                    created_at: "2024-01-18T09:00:00Z"
                    updated_at: "2024-01-18T09:00:00Z"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'
    
    post:
      summary: Create filtered calendar
      description: Create a new filtered calendar with specified filter configuration
      tags:
        - Filtered Calendars
      security:
        - UserAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - source_calendar_id
                - name
                - filter_config
              properties:
                source_calendar_id:
                  type: string
                  description: ID of the source calendar to filter
                  example: "cal_001"
                name:
                  type: string
                  minLength: 3
                  maxLength: 100
                  description: Name for the filtered calendar
                  example: "Work Events Only"
                filter_config:
                  $ref: '#/components/schemas/FilterConfig'
            example:
              source_calendar_id: "cal_001"
              name: "Work Events Only"
              filter_config:
                include_categories: ["Work", "Meeting"]
                exclude_categories: []
                filter_mode: "include"
      responses:
        '201':
          description: Filtered calendar created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilteredCalendar'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/filtered-calendars/{filtered_calendar_id}:
    put:
      summary: Update filtered calendar
      description: Update an existing filtered calendar's name or filter configuration
      tags:
        - Filtered Calendars
      security:
        - UserAuth: []
      parameters:
        - name: filtered_calendar_id
          in: path
          required: true
          schema:
            type: string
          description: Unique filtered calendar identifier
          example: "fc_001"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 3
                  maxLength: 100
                  description: Updated name for the filtered calendar
                  example: "Updated Work Events"
                filter_config:
                  $ref: '#/components/schemas/FilterConfig'
            example:
              name: "Updated Work Events"
              filter_config:
                include_categories: ["Work", "Meeting", "Training"]
                exclude_categories: []
                filter_mode: "include"
      responses:
        '200':
          description: Filtered calendar updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilteredCalendar'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
    
    delete:
      summary: Delete filtered calendar
      description: Remove a filtered calendar and its public access
      tags:
        - Filtered Calendars
      security:
        - UserAuth: []
      parameters:
        - name: filtered_calendar_id
          in: path
          required: true
          schema:
            type: string
          description: Unique filtered calendar identifier
          example: "fc_001"
      responses:
        '204':
          description: Filtered calendar deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  # ===============================================
  # Public Calendar Access
  # ===============================================

  /cal/{token}:
    get:
      summary: Get public filtered calendar
      description: Access a filtered calendar using its public token (no authentication required)
      tags:
        - Public Access
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
          description: Public access token for the filtered calendar
          example: "abc123def456"
      responses:
        '200':
          description: Successfully retrieved public calendar data
          content:
            text/calendar:
              schema:
                type: string
                description: iCal format calendar data
                example: |
                  BEGIN:VCALENDAR
                  VERSION:2.0
                  PRODID:-//iCal Viewer//Filter-iCal.de//EN
                  BEGIN:VEVENT
                  DTSTART:20240118T100000Z
                  DTEND:20240118T110000Z
                  SUMMARY:Team Meeting
                  CATEGORIES:Work
                  END:VEVENT
                  END:VCALENDAR
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: Filtered calendar name
                  events:
                    type: array
                    items:
                      $ref: '#/components/schemas/Event'
                    description: Filtered events
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  # ===============================================
  # User Preferences APIs
  # ===============================================

  /api/user/preferences:
    get:
      summary: Get user preferences
      description: Load user-wide preferences and settings
      tags:
        - Preferences
      security:
        - UserAuth: []
      responses:
        '200':
          description: Successfully retrieved user preferences
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - preferences
                properties:
                  success:
                    type: boolean
                    example: true
                  preferences:
                    type: object
                    description: User-specific preferences object
                    additionalProperties: true
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'
    
    put:
      summary: Save user preferences
      description: Update user-wide preferences and settings
      tags:
        - Preferences
      security:
        - UserAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: User preferences to save
              additionalProperties: true
      responses:
        '200':
          description: Preferences saved successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/calendars/{calendar_id}/preferences:
    get:
      summary: Get calendar-specific preferences
      description: Load filter state and UI preferences for a specific calendar
      tags:
        - Preferences
      security:
        - UserAuth: []
      parameters:
        - name: calendar_id
          in: path
          required: true
          schema:
            type: string
          description: Unique calendar identifier
          example: "cal_001"
      responses:
        '200':
          description: Successfully retrieved calendar preferences
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                  - preferences
                properties:
                  success:
                    type: boolean
                    example: true
                  preferences:
                    $ref: '#/components/schemas/CalendarPreferences'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
    
    put:
      summary: Save calendar-specific preferences
      description: Update filter state and UI preferences for a specific calendar
      tags:
        - Preferences
      security:
        - UserAuth: []
      parameters:
        - name: calendar_id
          in: path
          required: true
          schema:
            type: string
          description: Unique calendar identifier
          example: "cal_001"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalendarPreferences'
      responses:
        '200':
          description: Calendar preferences saved successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - success
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  # ===============================================
  # Saved Filters APIs
  # ===============================================

  /api/filters:
    get:
      summary: Get saved filters
      description: Retrieve all saved filter configurations for the authenticated user
      tags:
        - Saved Filters
      security:
        - UserAuth: []
      responses:
        '200':
          description: Successfully retrieved saved filters
          content:
            application/json:
              schema:
                type: object
                required:
                  - filters
                properties:
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/SavedFilter'
              example:
                filters:
                  - id: "sf_001"
                    name: "Work Events This Week"
                    config:
                      selectedEventTypes: ["Work", "Meeting"]
                      keywordFilter: ""
                      dateRange:
                        start: "2024-01-15"
                        end: "2024-01-21"
                      sortBy: "date"
                      sortDirection: "asc"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'
    
    post:
      summary: Save new filter
      description: Create a new saved filter configuration
      tags:
        - Saved Filters
      security:
        - UserAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - config
              properties:
                name:
                  type: string
                  minLength: 3
                  maxLength: 100
                  description: Name for the saved filter
                  example: "Work Events This Week"
                config:
                  $ref: '#/components/schemas/SavedFilterConfig'
      responses:
        '201':
          description: Filter saved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SavedFilter'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/filters/{filter_id}:
    delete:
      summary: Delete saved filter
      description: Remove a saved filter configuration
      tags:
        - Saved Filters
      security:
        - UserAuth: []
      parameters:
        - name: filter_id
          in: path
          required: true
          schema:
            type: string
          description: Unique saved filter identifier
          example: "sf_001"
      responses:
        '204':
          description: Filter deleted successfully
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  # ===============================================
  # iCal Generation API
  # ===============================================

  /api/calendar/{calendar_id}/generate:
    post:
      summary: Generate filtered iCal content
      description: Create filtered iCal content from a calendar based on category filters
      tags:
        - iCal Generation
      security:
        - UserAuth: []
      parameters:
        - name: calendar_id
          in: path
          required: true
          schema:
            type: string
          description: Unique calendar identifier
          example: "cal_001"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - selected_categories
                - filter_mode
              properties:
                selected_categories:
                  type: array
                  items:
                    type: string
                  description: Categories to include or exclude
                  example: ["Work", "Meeting"]
                filter_mode:
                  type: string
                  enum: [include, exclude]
                  description: Whether to include or exclude the selected categories
                  example: "include"
      responses:
        '200':
          description: Successfully generated filtered iCal content
          content:
            text/calendar:
              schema:
                type: string
                description: iCal format calendar data
                example: |
                  BEGIN:VCALENDAR
                  VERSION:2.0
                  PRODID:-//iCal Viewer//Filter-iCal.de//EN
                  BEGIN:VEVENT
                  DTSTART:20240118T100000Z
                  DTEND:20240118T110000Z
                  SUMMARY:Team Meeting
                  CATEGORIES:Work
                  END:VEVENT
                  END:VCALENDAR
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

# ===============================================
# Component Definitions
# ===============================================

components:
  securitySchemes:
    UserAuth:
      type: apiKey
      in: header
      name: x-user-id
      description: User identifier for authentication

  schemas:
    Calendar:
      type: object
      required:
        - id
        - name
        - url
        - user_id
        - created_at
      properties:
        id:
          type: string
          description: Unique calendar identifier
          example: "cal_001"
        name:
          type: string
          description: Calendar display name
          example: "Work Calendar"
        url:
          type: string
          format: uri
          description: Source iCal URL
          example: "https://example.com/work.ics"
        user_id:
          type: string
          description: Owner user identifier
          example: "user123"
        created_at:
          type: string
          format: date-time
          description: Calendar creation timestamp
          example: "2024-01-15T10:30:00Z"

    Event:
      type: object
      required:
        - id
        - title
        - start
        - end
        - category
      properties:
        id:
          type: string
          description: Unique event identifier
          example: "evt_001"
        title:
          type: string
          description: Event title/summary
          example: "Team Meeting"
        start:
          type: string
          format: date-time
          description: Event start time (ISO 8601)
          example: "2024-01-18T10:00:00Z"
        end:
          type: string
          format: date-time
          description: Event end time (ISO 8601)
          example: "2024-01-18T11:00:00Z"
        category:
          type: string
          description: Primary event category
          example: "Work"
        description:
          type: string
          description: Event description (optional)
          example: "Weekly team sync meeting"
        location:
          type: string
          description: Event location (optional)
          example: "Conference Room A"

    FilterConfig:
      type: object
      required:
        - filter_mode
      properties:
        include_categories:
          type: array
          items:
            type: string
          description: Categories to include (when filter_mode is 'include')
          example: ["Work", "Meeting"]
        exclude_categories:
          type: array
          items:
            type: string
          description: Categories to exclude (when filter_mode is 'exclude')
          example: []
        filter_mode:
          type: string
          enum: [include, exclude]
          description: Filter mode - include or exclude selected categories
          example: "include"

    FilteredCalendar:
      type: object
      required:
        - id
        - name
        - public_token
        - calendar_url
        - preview_url
        - source_calendar_id
        - filter_config
        - created_at
        - updated_at
      properties:
        id:
          type: string
          description: Unique filtered calendar identifier
          example: "fc_001"
        name:
          type: string
          description: Filtered calendar display name
          example: "Work Events Only"
        public_token:
          type: string
          description: Public access token for sharing
          example: "abc123def456"
        calendar_url:
          type: string
          format: uri
          description: Public subscription URL
          example: "https://filter-ical.de/cal/abc123def456"
        preview_url:
          type: string
          format: uri
          description: Preview URL for filtered calendar
          example: "https://filter-ical.de/preview/abc123def456"
        source_calendar_id:
          type: string
          description: Source calendar identifier
          example: "cal_001"
        filter_config:
          $ref: '#/components/schemas/FilterConfig'
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
          example: "2024-01-18T09:00:00Z"
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp
          example: "2024-01-18T15:30:00Z"

    CalendarPreferences:
      type: object
      properties:
        selected_categories:
          type: array
          items:
            type: string
          description: Currently selected categories
          example: ["Work", "Meeting"]
        filter_mode:
          type: string
          enum: [include, exclude]
          description: Current filter mode
          example: "include"
        expanded_categories:
          type: array
          items:
            type: string
          description: Expanded categories in UI
          example: ["Work"]
        show_single_events:
          type: boolean
          description: Whether to show individual events
          example: true
        show_categories_section:
          type: boolean
          description: Whether categories section is visible
          example: true
        show_selected_only:
          type: boolean
          description: Show only selected categories
          example: false
        category_search:
          type: string
          description: Current category search term
          example: ""
        preview_group:
          type: string
          description: Currently previewed group
          example: ""
        saved_at:
          type: string
          format: date-time
          description: When preferences were last saved
          example: "2024-01-18T14:20:00Z"

    SavedFilter:
      type: object
      required:
        - id
        - name
        - config
      properties:
        id:
          type: string
          description: Unique saved filter identifier
          example: "sf_001"
        name:
          type: string
          description: Filter display name
          example: "Work Events This Week"
        config:
          $ref: '#/components/schemas/SavedFilterConfig'

    SavedFilterConfig:
      type: object
      required:
        - selectedEventTypes
        - sortBy
        - sortDirection
      properties:
        selectedEventTypes:
          type: array
          items:
            type: string
          description: Selected event type categories
          example: ["Work", "Meeting"]
        keywordFilter:
          type: string
          description: Keyword search filter
          example: ""
        dateRange:
          type: object
          properties:
            start:
              type: string
              format: date
              description: Filter start date
              example: "2024-01-15"
            end:
              type: string
              format: date
              description: Filter end date
              example: "2024-01-21"
        sortBy:
          type: string
          description: Sort field
          example: "date"
        sortDirection:
          type: string
          enum: [asc, desc]
          description: Sort direction
          example: "asc"

    Error:
      type: object
      required:
        - detail
      properties:
        detail:
          type: string
          description: Human-readable error message
          example: "Calendar not found"

  responses:
    BadRequest:
      description: Bad Request - Invalid input data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            validation_error:
              summary: Validation error
              value:
                detail: "Name is required and must be at least 3 characters"
            invalid_url:
              summary: Invalid URL
              value:
                detail: "Calendar URL must be a valid HTTP/HTTPS URL"

    Unauthorized:
      description: Unauthorized - Missing or invalid x-user-id header
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            detail: "Authentication required - please log in"

    NotFound:
      description: Not Found - Resource does not exist or access denied
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            calendar_not_found:
              summary: Calendar not found
              value:
                detail: "Calendar not found"
            token_not_found:
              summary: Public token not found
              value:
                detail: "Public calendar not found or access token invalid"

    InternalError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            detail: "Internal server error occurred"

# ===============================================
# Tags for Organization
# ===============================================

tags:
  - name: Calendars
    description: Basic calendar CRUD operations
  - name: Calendar Data
    description: Event and category data from calendars
  - name: Filtered Calendars
    description: Create and manage filtered calendar views
  - name: Public Access
    description: Public access to filtered calendars
  - name: Preferences
    description: User and calendar-specific preferences
  - name: Saved Filters
    description: Save and manage filter configurations
  - name: iCal Generation
    description: Generate filtered iCal content