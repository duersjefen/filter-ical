"""Add missing cache columns

Revision ID: 1b2daf13c9f7
Revises: 
Create Date: 2025-09-18 14:13:01.335978

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = '1b2daf13c9f7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Only add missing columns - don't drop old tables for safety
    
    # Add missing calendar cache columns
    with op.batch_alter_table('calendars') as batch_op:
        batch_op.add_column(sa.Column('cached_ical_content', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
        batch_op.add_column(sa.Column('cached_content_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
        batch_op.add_column(sa.Column('cache_updated_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('cache_expires_at', sa.DateTime(), nullable=True))
        batch_op.create_index('ix_calendars_cache_expires_at', ['cache_expires_at'], unique=False)
        batch_op.create_index('ix_calendars_cache_updated_at', ['cache_updated_at'], unique=False)
        # Create domain_id index if it doesn't exist
        batch_op.create_index('ix_calendars_domain_id', ['domain_id'], unique=False)
    
    # Add missing filtered_calendars column with default value
    with op.batch_alter_table('filtered_calendars') as batch_op:
        batch_op.add_column(sa.Column('needs_regeneration', sa.Boolean(), nullable=False, server_default='0'))
        batch_op.create_index('ix_filtered_calendars_needs_regeneration', ['needs_regeneration'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_filtered_calendars_needs_regeneration'), table_name='filtered_calendars')
    op.drop_column('filtered_calendars', 'needs_regeneration')
    op.drop_index(op.f('ix_calendars_domain_id'), table_name='calendars')
    op.drop_index(op.f('ix_calendars_cache_updated_at'), table_name='calendars')
    op.drop_index(op.f('ix_calendars_cache_expires_at'), table_name='calendars')
    op.alter_column('calendars', 'domain_id',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_column('calendars', 'cache_expires_at')
    op.drop_column('calendars', 'cache_updated_at')
    op.drop_column('calendars', 'cached_content_hash')
    op.drop_column('calendars', 'cached_ical_content')
    op.create_table('user_preferences',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('user_id', sa.VARCHAR(), nullable=False),
    sa.Column('preferences_json', sa.VARCHAR(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('updated_at', sa.DATETIME(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_user_preferences_user_id', 'user_preferences', ['user_id'], unique=1)
    op.create_table('calendar_preferences',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('user_id', sa.VARCHAR(), nullable=False),
    sa.Column('calendar_id', sa.VARCHAR(), nullable=False),
    sa.Column('selected_events', sa.VARCHAR(), nullable=False),
    sa.Column('filter_mode', sa.VARCHAR(length=7), nullable=False),
    sa.Column('expanded_events', sa.VARCHAR(), nullable=False),
    sa.Column('show_single_events', sa.BOOLEAN(), nullable=False),
    sa.Column('show_events_section', sa.BOOLEAN(), nullable=False),
    sa.Column('show_selected_only', sa.BOOLEAN(), nullable=False),
    sa.Column('event_search', sa.VARCHAR(), nullable=False),
    sa.Column('preview_group', sa.VARCHAR(), nullable=False),
    sa.Column('saved_at', sa.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['calendar_id'], ['calendars.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_calendar_preferences_user_id', 'calendar_preferences', ['user_id'], unique=False)
    op.create_table('saved_filters',
    sa.Column('id', sa.VARCHAR(), nullable=False),
    sa.Column('user_id', sa.VARCHAR(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=False),
    sa.Column('selected_event_types', sa.VARCHAR(), nullable=False),
    sa.Column('keyword_filter', sa.VARCHAR(), nullable=False),
    sa.Column('date_range_start', sa.VARCHAR(), nullable=True),
    sa.Column('date_range_end', sa.VARCHAR(), nullable=True),
    sa.Column('sort_by', sa.VARCHAR(), nullable=False),
    sa.Column('sort_direction', sa.VARCHAR(length=4), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_saved_filters_user_id', 'saved_filters', ['user_id'], unique=False)
    # ### end Alembic commands ###
