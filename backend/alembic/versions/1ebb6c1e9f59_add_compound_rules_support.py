"""add_compound_rules_support

Revision ID: 1ebb6c1e9f59
Revises: c0c836a5201f
Create Date: 2025-10-14 17:08:43.576918

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1ebb6c1e9f59'
down_revision: Union[str, None] = 'c0c836a5201f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Add compound rule support to assignment_rules table
    op.add_column('assignment_rules', sa.Column('parent_rule_id', sa.Integer(), nullable=True))
    op.add_column('assignment_rules', sa.Column('operator', sa.String(length=10), server_default='AND', nullable=False))
    op.add_column('assignment_rules', sa.Column('is_compound', sa.Boolean(), server_default='false', nullable=False))

    # Add foreign key constraint for parent_rule_id
    op.create_foreign_key(
        'fk_assignment_rules_parent_rule',
        'assignment_rules',
        'assignment_rules',
        ['parent_rule_id'],
        ['id'],
        ondelete='CASCADE'
    )

    # Make rule_type and rule_value nullable (they're NULL for compound parent rules)
    op.alter_column('assignment_rules', 'rule_type', nullable=True)
    op.alter_column('assignment_rules', 'rule_value', nullable=True)

    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('admin_settings', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('admin_settings', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.create_index(op.f('ix_admin_settings_id'), 'admin_settings', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_admin_settings_id'), table_name='admin_settings')
    op.alter_column('admin_settings', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('admin_settings', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    # ### end Alembic commands ###

    # Reverse compound rule changes
    op.alter_column('assignment_rules', 'rule_value', nullable=False)
    op.alter_column('assignment_rules', 'rule_type', nullable=False)
    op.drop_constraint('fk_assignment_rules_parent_rule', 'assignment_rules', type_='foreignkey')
    op.drop_column('assignment_rules', 'is_compound')
    op.drop_column('assignment_rules', 'operator')
    op.drop_column('assignment_rules', 'parent_rule_id')
