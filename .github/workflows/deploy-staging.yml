# =============================================================================
# Automated Staging Deployment
# =============================================================================
# Triggers automatically after successful image build
# Deploys to: https://staging.filter-ical.de
# =============================================================================

name: Deploy to Staging

on:
  workflow_run:
    workflows: ["Build and Push Docker Images"]
    types:
      - completed
    branches:
      - main
  workflow_dispatch:  # Manual trigger option

jobs:
  deploy-staging:
    name: Deploy to Staging Environment
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}

    environment:
      name: staging
      url: https://staging.filter-ical.de

    steps:
      - name: 🔑 Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: 🚀 Deploy to Staging
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          ssh -i ~/.ssh/id_rsa ${EC2_USER}@${EC2_HOST} << 'REMOTE'
            set -e

            echo "🚀 Deploying filter-ical to staging..."
            cd /opt/multi-tenant-platform

            # Authenticate to GitHub Container Registry
            echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u duersjefen --password-stdin

            # Run deployment
            PLATFORM_ROOT=/opt/multi-tenant-platform \
            ENVIRONMENT=staging \
            ./lib/deploy.sh filter-ical staging

            echo "✅ Staging deployment complete"
          REMOTE

      - name: 🧪 Run Smoke Tests
        env:
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          echo "🧪 Running smoke tests..."
          sleep 10

          # Test backend health endpoint
          if ! ssh ${EC2_USER}@${EC2_HOST} 'docker exec filter-ical-backend-staging curl -f http://localhost:3000/health 2>/dev/null'; then
            echo "❌ Backend health check failed"
            exit 1
          fi
          echo "✅ Backend is healthy"

          # Test frontend health endpoint
          if ! ssh ${EC2_USER}@${EC2_HOST} 'docker exec filter-ical-frontend-staging curl -f http://localhost/health 2>/dev/null'; then
            echo "❌ Frontend health check failed"
            exit 1
          fi
          echo "✅ Frontend is healthy"

          # Test external HTTPS endpoint
          if ! curl -f -m 10 https://staging.filter-ical.de/health 2>/dev/null; then
            echo "❌ External HTTPS check failed"
            exit 1
          fi
          echo "✅ External HTTPS is working"

          echo "✅ All smoke tests passed"

      - name: 📢 Deployment Success
        if: success()
        run: |
          echo "✅ Staging deployment successful!"
          echo "🌐 URL: https://staging.filter-ical.de"
          echo "📝 Commit: ${{ github.sha }}"
          echo "👤 Author: ${{ github.actor }}"
          echo ""
          echo "ℹ️  Note: Auto-rollback is handled by deploy.sh on failure"
